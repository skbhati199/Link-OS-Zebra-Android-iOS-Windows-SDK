<!--
 /***********************************************
 * CONFIDENTIAL AND PROPRIETARY 
 * 
 * The source code and other information contained herein is the confidential and exclusive property of
 * ZIH Corp. and is subject to the terms and conditions in your end user license agreement.
 * This source code, and any other information contained herein, shall not be copied, reproduced, published, 
 * displayed or distributed, in whole or in part, in any medium, by any means, for any purpose except as
 * expressly permitted under such license agreement.
 * 
 * Copyright ZIH Corp. 2018
 * 
 * ALL RIGHTS RESERVED
 ***********************************************/
-->

<UserControl x:Class="DeveloperDemo_Card_Desktop.Demos.SmartCard.SmartCardDemo"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DeveloperDemo_Card_Desktop.Demos.SmartCard"
             xmlns:usercontrols="clr-namespace:DeveloperDemo_Card_Desktop.UserControls"
             xmlns:converters="clr-namespace:DeveloperDemo_Card_Desktop.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.DataContext>
        <local:SmartCardDemoViewModel />
    </UserControl.DataContext>
    <UserControl.Resources>
        <converters:StringNullOrEmptyConverter x:Key="StringNullOrEmptyConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid Margin="15">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Row="0" Grid.Column="0" Margin="0 0 5 5" FontWeight="Bold">Source</TextBlock>
            <ComboBox Grid.Row="1" Grid.Column="0" Margin="0 0 5 0" ItemsSource="{Binding Sources}" SelectedItem="{Binding SelectedSource}" />
            <TextBlock Grid.Row="0" Grid.Column="1" Margin="5 0 5 5" FontWeight="Bold">Destination</TextBlock>
            <ComboBox Grid.Row="1" Grid.Column="1" Margin="5 0 5 0" ItemsSource="{Binding Destinations}" SelectedItem="{Binding SelectedDestination}" />
            <TextBlock Grid.Row="0" Grid.Column="2" Margin="5 0 0 5" FontWeight="Bold">Encoder Type</TextBlock>
            <ComboBox Grid.Row="1" Grid.Column="2" Margin="5 0 0 0" ItemsSource="{Binding EncoderTypes}" SelectedItem="{Binding SelectedEncoderType}" />
            <StackPanel Grid.Row="2" Grid.ColumnSpan="3" Margin="0 15 0 0" Orientation="Horizontal" HorizontalAlignment="Right">
                <Button x:Name="StartJobButton" Click="StartJobButton_Click">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding SelectedSource, Converter={StaticResource StringNullOrEmptyConverter}}" Value="False"/>
                                        <Condition Binding="{Binding SelectedDestination, Converter={StaticResource StringNullOrEmptyConverter}}" Value="False"/>
                                        <Condition Binding="{Binding SelectedEncoderType, Converter={StaticResource StringNullOrEmptyConverter}}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    Start Job
                </Button>
            </StackPanel>
        </Grid>
        <Border Grid.Row="1" BorderThickness="0 1 0 0" BorderBrush="LightGray" SnapsToDevicePixels="True">
            <usercontrols:JobStatusControl x:Name="JobStatusControl" Margin="15" />
        </Border>
    </Grid>
</UserControl>
