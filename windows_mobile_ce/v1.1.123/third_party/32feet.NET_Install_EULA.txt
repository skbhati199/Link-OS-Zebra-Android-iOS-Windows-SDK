32feet.NET Personal Area Networking for .NET v2.3
Build 2.3.530 30th May 2008

This library provides a .NET networking API for devices and desktop computers running the Microsoft Bluetooth stack, Microsoft Windows supported IrDA devices and associated Object Exchange (OBEX) services for both these mediums. Online documentation is integrated into your Visual Studio help. The object model has been designed to promote consistency between Bluetooth, IrDA and traditional TCP/IP networking.

Supported Platforms
.NET Framework v2.0 / v3.0 / v3.5
.NET Compact Framework v2.0 / v3.5
Windows XP SP2 and above
Windows Vista
Windows CE 4.2 and above
Windows Mobile 2003 and above
Only the Microsoft Bluetooth stack is supported - this library will not work with Broadcom and other third-party stacks.

Tools
Requires Visual Studio 2005 / 2008.

Samples
BluetoothChat - Multiplatform chat application, versions for Smartphone, Pocket PC and Desktop
BluetoothRemote - Desktop listener and Smartphone client, forwards button presses to the desktop, can be used to remotely control Powerpoint etc
BluetoothSDP -Showcases SDP parsing.
ObexPush - Used to send any file object to an available device over Bluetooth or IrDA
ObjectPushVB - Visual Basic device project (VS2003)
DesktopObexListener - Listens for and stores incoming objects (Designed for use on a Windows XP machine)
DeviceObexListener - Pocket PC equivalent (Turn off default Beam option on device for this to run)
IrDAServiceClient - Shows the IrDA functionality available for desktop Windows

V2.3.530
·	Improved support for legacy virtual COM ports on Windows Mobile
·	BluetoothDeviceInfo.SetServiceState updated for CE to support SerialPort, Headset, Handsfree and A2DP profiles
·	Improved consistency between XP and CE versions
·	Improved discovery on XP when retrieving paired devices
·	Bug Fixes - See CodePlex Workspace for history

V2.2.1115
·	SDP record parsing
·	Blocked .NETCF assembly from running on desktop
·	Bug fixes - See Codeplex workspace for history
·	Improved RSSI property
V2.1.0207
·	Unit Tests added
·	Bug Fixes - See Codeplex Workspace for history
·	Added options to SelectBluetoothDeviceDialog
·	Clearer identification of assemblies from their file resources
·	Limited SDP support with BluetoothDeviceInfo and ServiceRecord types
·	Support for changes in Windows Mobile 5.0 AKU3 Registry
·	RSSI support for devices supporting this feature
·	More optimization in the platform/framework specific builds

V2.0.60828
·	Merged into single assembly - InTheHand.Net.Personal.dll
·	Separate builds for device/desktop (work around VB.NET desktop compiler bug)
·	Improved ClassOfDevice handling
·	Improved BluetoothSecurity.PairDevice on Windows CE
·	Improved BluetoothRadio.IsSupported on Windows CE
·	Performance improvements and added code comments

v1.6.51222
·	Fixed a bug in IrDAAddress.Equals
·	Added new InTheHand.Net.Bluetooth.Manufacturer constants
v1.6.51212
·	Added compatibility with VS2005 RTM and simplified installer
·	Libraries now added to “Add Reference” list on desktop projects
·	BluetoothDeviceInfo.SetServiceState allows you to install/remove drivers for services on devices such as Serial port etc (Windows XP only)
·	Fixed BluetoothRadio.IsSupported on Windows XP machines
·	Improved ObexListener code to reduce instances of OBEX parsing failure
·	BluetoothSecurity PairRequest / RemoteDevice support for both CE and XP
·	Moved Forms functionality to InTheHand.Net.Forms.dll
·	Improved IrDAClient.DiscoverDevices to discover multiple devices and handle different character encodings. Added more IrDADeviceHints
·	Documentation fixes

v1.5.51015
·	Improvements to OBEX code to provide added support for the ContentLength header
·	Improved handling of interrupted links during OBEX transfer
·	Added SocketOptionName constants for IrDA library
·	Improvements to ObexListener buffer handling and speed

v1.5.50922
Changed BluetoothRadio to correctly distinguish between a radio which is turned off or not present
Altered ObexListener SDP record to improve compatibility with more device types

v1.5.50920
This release further improves the consistency with other Sockets based classes within .NET. Both BluetoothClient and BluetoothListener publicly expose their Client and Server Sockets respectively along with additional relevant properties as found on the TcpClient class.
The BluetoothDeviceInfo class is enhanced to provide more information about remote devices. BluetoothRadio provides new properties to make it easier to determine if the platform supports the library.
A bug was fixed in the BluetoothRemoteListener sample where the listener would lock up following a disconnect.
Basic service discovery is supported on Windows XP via the Services property on BluetoothDeviceInfo, under Windows CE this always returns an empty collection.

Feedback, Bugs, Feature requests etc
Please use the forums at - <http://inthehand.com/forums/>
Source
The source workspace is located at <http://www.codeplex.com/32feet/>

I hope you will enjoy using the Personal Area Networking libraries for .NET,

Peter Foot
Device Application Development MVP
www.peterfoot.net <http://www.peterfoot.net>  | www.inthehand.com <http://www.inthehand.com> 

In The Hand Community License
(Derived from the Microsoft Reciprocal License (Ms-RL))

This license governs use of the accompanying software. If you use the software, you accept this license. If you do not accept the license, do not use the software.

1. Definitions
The terms "reproduce," "reproduction," "derivative works," and "distribution" have the same meaning here as under U.S. copyright law. 
A "contribution" is the original software, or any additions or changes to the software. 
A "contributor" is any person that distributes its contribution under this license.
"Licensed patents" are a contributor's patent claims that read directly on its contribution.
2. Grant of Rights
(A) Copyright Grant- Subject to the terms of this license, including the license conditions and limitations in section 3, each contributor grants you a non-exclusive, worldwide, royalty-free copyright license to reproduce its contribution, prepare derivative works of its contribution, and distribute its contribution or any derivative works that you create.
(B) Patent Grant- Subject to the terms of this license, including the license conditions and limitations in section 3, each contributor grants you a non-exclusive, worldwide, royalty-free license under its licensed patents to make, have made, use, sell, offer for sale, import, and/or otherwise dispose of its contribution in the software or derivative works of the contribution in the software.
3. Conditions and Limitations
(A) Reciprocal Grants- For any file you distribute that contains code from the software (in source code or binary format), you must provide recipients the source code to that file along with a copy of this license, which license will govern that file. You may license other files that are entirely your own work and do not contain code from the software under any terms you choose. 
(B) No Trademark License- This license does not grant you rights to use any contributors' name, logo, or trademarks. 
(C) If you bring a patent claim against any contributor over patents that you claim are infringed by the software, your patent license from such contributor to the software ends automatically. 
(D) If you distribute any portion of the software, you must retain all copyright, patent, trademark, and attribution notices that are present in the software. 
(E) If you distribute any portion of the software in source code form, you may do so only under this license by including a complete copy of this license with your distribution. If you distribute any portion of the software in compiled or object code form, you may only do so under a license that complies with this license. 
(F) The software is licensed "as-is." You bear the risk of using it. The contributors give no express warranties, guarantees, or conditions. You may have additional consumer rights under your local laws which this license cannot change. To the extent permitted under your local laws, the contributors exclude the implied warranties of merchantability, fitness for a particular purpose and non-infringement.